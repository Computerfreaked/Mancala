default:
  image: maven:3.6.3-openjdk-11

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAX_NO_COMPILER_WARN: 2

stages:
  - version
  - build
  - test
  - coverageTest
  - package
  - deploy

cache:
  paths:
    - .m2/repository

updateVersion:
  stage: version

  script:
    - latestVersion=$(git describe --always)
    - echo $latestVersion | tee target/currentversion.txt
    - mvn versions:set -DnewVersion=$latestVersion
  
  artifacts:
    expire_in: 1 hour
    paths:
      - target/

validateAndCompile:
  stage: build

  script:
    - mvn $MAVEN_OPTS clean compile | tee compileStepOutput.txt
  
  artifacts:
    expire_in: 1 hour
    paths:
      - target/
      - compileStepOutput.txt

runUnitTests:
  stage: test
  script: mvn $MAVEN_OPTS test

  artifacts:
    expire_in: 1 hour
    paths:
      - target/
    reports:
        junit:
          - target/surefire-reports/TEST-*.xml

checkCompileWarnings:
  stage: test
  script:
    - cat compileStepOutput.txt | grep -i warning| tee compilerWarnings.txt
    - if [ $(cat compileStepOutput.txt | grep -i warning | wc -l) -gt $MAX_NO_COMPILER_WARN ]; then echo -e "\033[0;31m[ERROR]\033[0m Too many compiler warnings!"; false; fi

  artifacts:
    expire_in: 1 hour
    paths:
      - compilerWarnings.txt

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  stage: test

  rules:
    - when: never

  artifacts:
    expire_in: 30 days
    paths: [gl-code-quality-report.json]


jacocoInstructionsCoverage:
  stage: coverageTest
  
  script: "awk -F \",\" '{ instructions += $4 + $5; covered += $5 } END { print covered, \"/\", instructions, \"instructions covered\"; print \"Instructions covered: \"100*covered/instructions, \"%\" }' target/site/jacoco/jacoco.csv"
  coverage: "/Instructions covered:\\s\\d+\\.*\\d*\\s%/"
  
  artifacts:
    expire_in: 1 hour
    paths:
      - target/

package:
  stage: package

  # rules:
  #   - if: '$CI_COMMIT_BRANCH == "master"'
  #     allow_failure: false

  script:
    - mvn package
  
  artifacts:
    expire_in: 1 hour
    paths:
      - target/mancala*
      - target/currentversion.txt

createDockerImage:
  stage: deploy
  image: docker:19.03.12
  services:
  - docker:19.03.13-dind
  
  # rules:
  #   - if: '$CI_COMMIT_BRANCH == "master"'
  #     allow_failure: false

  script:
    - docker build -t computerfreaked/test:$(cat currentversion.txt) .