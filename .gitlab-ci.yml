default:
  image: maven:3.6.3-openjdk-11

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAX_NO_COMPILER_WARN: 2

stages:
  - build
  - test
  - coverageTest
  - package
#  - deploy

cache:
  paths:
    - .m2/repository

validateAndCompile:
  stage: build

  script:
    - mvn $MAVEN_OPTS clean compile | tee compileStepOutput.txt
  
  artifacts:
    expire_in: 1 hour
    paths:
      - target/
      - compileStepOutput.txt

runUnitTests:
  stage: test
  script: mvn $MAVEN_OPTS test

  artifacts:
    expire_in: 1 hour
    paths:
      - target/
    reports:
        junit:
          - target/surefire-reports/TEST-*.xml

checkCompileWarnings:
  stage: test
  script:
    - cat compileStepOutput.txt | grep -i warning| tee compilerWarnings.txt
    - if [ $(cat compileStepOutput.txt | grep -i warning | wc -l) -gt $MAX_NO_COMPILER_WARN ]; then echo -e "\033[0;31m[ERROR]\033[0m Too many compiler warnings!"; false; fi

  artifacts:
    expire_in: 1 hour
    paths:
      - compilerWarnings.txt

jacocoInstructionsCoverage:
  stage: coverageTest
  script: "awk -F \",\" '{ instructions += $4 + $5; covered += $5 } END { print covered, \"/\", instructions, \"instructions covered\"; print \"Instructions covered: \"100*covered/instructions, \"%\" }' target/site/jacoco/jacoco.csv"
  coverage: "/Instructions covered:\\s\\d+\\.*\\d*\\s%/"

createDockerImage:
  stage: package
  
  rules:
    # - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "master"'
      allow_failure: false

  script:
    - latestVersion=$(git describe)
    - echo $latestVersion

